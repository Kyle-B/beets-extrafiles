[build-system]
requires = ["setuptools>=61.2", "setuptools>=45", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "beets-extrafiles"
dynamic = ["version"]
authors = [
    { name = "Bao Trinh", email = "baodtrinh@gmail.com" },
    { name = "Jan Holthuis", email = "holthuis.jan@gmail.com" },
]
license = { text = "MIT" }
description = "A plugin for beets that copies additional files and directories during the import process."
readme = "README.md"
classifiers = [
    "Topic :: Desktop Environment :: File Managers",
    "Topic :: Multimedia :: Sound/Audio",
    "Topic :: Multimedia :: Sound/Audio :: Players :: MP3",
    "License :: OSI Approved :: MIT License",
    "Environment :: Console",
    "Environment :: Web Environment",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
requires-python = ">=3.8"
dependencies = [
    "beets>=1.4.7",
    "mediafile>=0.9.0",
]

[project.optional-dependencies]
lint = [
    "black",
    "isort",
    "mypy",
    "ruff",
]

[tool.setuptools]
packages = ["beetsplug"]

[tool.setuptools_scm]

[tool.mypy]
python_version = "3.8"

[[tool.mypy.overrides]]
module = "beets.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "mediafile"
ignore_missing_imports = true

[tool.ruff]
line-length = 120

select = [
    "F",      # pyflakes
    "E",      # pycodestyle
    "W",      # pycodestyle
    # "C90",  # mccabe
    "I",      # isort
    "N",      # pep8-naming
    # "D",    # pydocstyle
    "UP",     # pyupgrade
    "YTT",    # flake8-2020
    "ANN",    # flake8-annotations
    "ASYNC",  # flake8-async
    "S",      # flake8-bandit
    "BLE",    # flake8-blind-except
    "FBT",    # flake8-boolean-trap
    "B",      # flake8-bugbear
    "A",      # flake8-builtins
    # "COM",  # flake8-commas
    "C4",     # flake8-comprehensions
    "DTZ",    # flake8-datetimez
    "T10",    # flake8-debugger
    "DJ",     # flake8-django
    # "EM",   # flake8-errmsg
    "EXE",    # flake8-executable
    "FA",     # flake8-future-annotations
    "ISC",    # flake8-implicit-str-concat
    "ICN",    # flake8-import-conventions
    "G",      # flake8-logging-format
    "INP",    # flake8-no-pep420
    "PIE",    # flake8-pie
    "T20",    # flake8-print
    "PYI",    # flake8-pyi
    "PT",     # flake8-pytest-style
    "Q",      # flake8-quotes
    "RSE",    # flake8-raise
    "RET",    # flake8-return
    "SLF",    # flake8-self
    "SIM",    # flake8-simplify
    "TID",    # flake8-tidy-imports
    "TCH",    # flake8-type-checking
    "INT",    # flake8-gettext
    "ARG",    # flake8-unused-arguments
    "PTH",    # flake8-use-pathlib
    # "TD",   # flake8-todos
    "ERA",    # eradicate
    "PD",     # pandas-vet
    "PGH",    # pygrep-hooks
    "PL",     # pylint
    "PLC",    # convention
    "PLE",    # error
    "PLR",    # refactor
    "PLW",    # warning
    # "TRY",  # tryceratops
    "FLY",    # flynt
    "NPY",    # NumPy-specific rules
    "RUF",    # ruff-specific rules
]

ignore = [
    # missing-type-self: Missing type annotation for `self` in method
    "ANN101",
    # missing-type-cls: Missing type annotation for `cls` in classmethod
    "ANN102",
]

[tool.ruff.isort]
force-single-line = true

[tool.isort]
profile = "black"
src_paths = ["beetsplug"]
force_single_line = true
line_length = 120

[tool.black]
line-length = 120
